// import { AppStateProvider } from "@/state/AppStateContext";
// import "@/styles/globals.css";
import { ChakraProvider, extendTheme } from "@chakra-ui/react";
import { ThemeProvider } from "next-themes";
import type { AppProps } from "next/app";
import { RecoilRoot } from "recoil";
import {
  QueryClient,
  QueryClientProvider,
  useQuery,
} from "@tanstack/react-query";

// Instances of useSession will then have access to the session data and status. The <SessionProvider /> also takes care of keeping the session updated and synced between browser tabs and windows.
const theme = extendTheme({
  styles: {
    global: () => ({
      body: {
        bg: "",
      },
    }),
  },
});

const queryClient = new QueryClient();
// export default function App({
//   Component,
//   pageProps: { ...pageProps },
// }: AppProps) {
//   // TODO: check loading states
//   // if (loading === true) return <p>Loading...</p>;
//   return (
//     <>
//       <RecoilRoot>
//         <ChakraProvider theme={theme}>
//           <ThemeProvider attribute="class">
//             <QueryClientProvider client={queryClient}>
//               <Component {...pageProps} />
//             </QueryClientProvider>
//           </ThemeProvider>
//         </ChakraProvider>
//       </RecoilRoot>
//     </>
//   );
// }
export default function App({
  Component,
  pageProps: { ...pageProps },
}: AppProps) {
  return <Component {...pageProps} />;
}
